--- # -------- ENTERPRISES --------

createEnterprise:
  handler: src/Enterprise._create
  description: Creates an enterprise based on data retrieved from body
  events:
    - http:
        path: enterprise
        method: post
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

deleteEnterprise:
  handler: src/Enterprise._delete
  description: Deletes an enterprise based on NIT
  events:
    - http:
        path: enterprise/{id}
        method: delete
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

getEnterprise:
  handler: src/Enterprise._get
  description: Gets detailed information for enterprises based on NIT
  events:
    - http:
        path: enterprise/{id}
        method: get
        cors: true

editEnterprise:
  handler: src/Enterprise._edit
  description: Updates enterprise given on parameters
  events:
    - http:
        path: enterprise/{id}
        method: put
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

getAllEnterprises:
  handler: src/Enterprise._getAll
  description: Gets all existing enterprises on database
  events:
    - http:
        path: enterprises
        method: get
        cors: true

# -------- INVENTORY --------

getProduct:
  handler: src/Inventory/getProduct._get
  description: Gets detailed information for product based on SKU
  events:
    - http:
        path: product/{sku}
        method: get
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

createProduct:
  handler: src/Inventory/createProduct._create
  description: Creates a product based on enterprise NIT.
  events:
    - http:
        path: product
        method: post
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

editProduct:
  handler: src/Inventory/editProduct._edit
  description: Updates a product based on SKU.
  events:
    - http:
        path: product/{sku}
        method: put
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

deleteProduct:
  handler: src/Inventory/deleteProduct._delete
  description: Deletes a product based on SKU.
  events:
    - http:
        path: product/{sku}
        method: delete
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token

getProductsByEnterprise:
  handler: src/Inventory/getByEnterprise._getByEnterprise
  description: Gets products who belongs to specific enterprise based on NIT.
  events:
    - http:
        path: product
        method: get
        cors: true

sendEmailWithInventory:
  handler: src/Inventory/sendEmail._sendEmail
  description: Send an email with inventory in PDF format
  events:
    - http:
        path: pdf_inventory/{id}
        method: post
        cors: true
  role: LiteNotificationRole

getInventoryPDF:
  handler: src/Inventory/getInventoryPDF._getInventoryPDF
  description: Generates a pdf containing inventory information
  events:
    - http:
        path: pdf_inventory/{id}
        method: get
        cors: true
        authorizer:
          name: verifyToken
          resultTtlInSeconds: 0
          identitySource: method.request.header.Authorization
          type: token
